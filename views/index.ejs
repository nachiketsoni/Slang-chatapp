<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <link rel="shortcut icon" href="../images/image-removebg-preview.png" type="image/x-icon">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>mehnga-ChatApp</title>
</head>
<link rel="stylesheet" href="../stylesheets/style.css">
<link href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css" rel="stylesheet">

<body>
  
  <div id="main">

    <div id="center">
      <!-- <div id="menu">
        <a href="">Create a Group</a>
        <a href="">Start a Private Chat</a>
        <a href="">Join a Group</a>
      </div> -->
      <nav>

        <div class="online"><i class="ri-close-fill"></i><text>Online:&nbsp;<span id="online"></span></div>
        <div class="menu">
          <div class="l"></div>
          <div class="l"></div>
          <div class="l"></div>
        </div>
      </nav>
  
      <div class="container">
  
      </div>
      <div class="overlay"></div>
      <div class="send">
        <form class="send-container">
          <textarea id="messageInp" placeholder="Type a message..." name="messageInp"></textarea>
          <button class="btn" type="submit"><i class="ri-send-plane-fill"></i></button>
        </form>
        <div class="onlineusers">
  
        </div>
      </div>
  
  
    </div>
    
  </div>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.6.1/gsap.min.js"></script>
  <script src="../javascripts/moment.js"></script>
  <script src="https://cdn.socket.io/4.5.0/socket.io.min.js"
    integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k"
    crossorigin="anonymous"></script>
  <script>
    var socket = io();

    var flag = 0
    const onlin = document.querySelector(".online")

    const onuser = document.querySelector(".onlineusers")
    // const menuslide = document.querySelector("#menu")
    // let mflag =0
    // document.querySelector(".menu").addEventListener("click", function () {
    //   if (mflag == 0) {
    //     menuslide.style.transform = "translateX(0)"
    //     mflag = 1
    //   } else {
    //     menuslide.style.transform = "translateX(-100%)"
    //     mflag = 0
    //   }
    // })
    onlin.addEventListener("click", (e) => {
      console.log(e)
      if (flag === 0) {
        var tl = gsap.timeline()
        tl
          .to('.onlineusers', {
            bottom: 0,
            duration: .5,

          }, "b")
          .to(".online text", {
            opacity: 0,
            duration: .0000002
          }, "b")
          .to(".online", {
            width: '41px',
            height: '41px',
            borderRadius:'50%',
            duration: .1
          }, "b")
          .to(".online i", {
            opacity: 1,
            rotate: 0,
            duration: .3,
            delay:.2

          },"b")


        flag = 1;
      }
      else {

        var tl2 = gsap.timeline()
        tl2
          .to('.onlineusers', {
            bottom: '-80%',
            duration: .5,
          }, "b")
          .to(".online i", {
            opacity: 0,
            rotate: '-60deg',

            duration: .0000002

          }, "a")
          .to(".online", {
            width: '',
            height: '',
            borderRadius:'10px',

          }, "b")
          .to(".online text", {
            opacity: 1
          }, "a")


        flag = 0;
      }
    })

    const menu = document.querySelector(".menu")
    const line = document.querySelectorAll(".l")
    const lineall = document.querySelector(".l")
    let lolo= 0
    menu.addEventListener("click",(e)=>{
      console.log(e)
      if(lolo===0){
        menu.style.justifyContent='center'
        line.forEach((ele)=>{
          ele.style.position='absolute'
        })
        line[0].style.transform='rotate(45deg)'
        line[1].style.transform='rotate(45deg)'
        line[2].style.transform='rotate(-45deg)'
        lolo=1
      }
      else{
        menu.style.justifyContent='space-between'
        line.forEach((ele)=>{
          ele.style.position='relative'
        })
        line[0].style.transform='rotate(0)'
        line[1].style.transform='rotate(0)'
        line[2].style.transform='rotate(0)'
        lolo=0
      }
    })

    const form = document.querySelector('.send-container')
    const messageInp = document.querySelector('#messageInp')
    const messageContainer = document.querySelector('.container')
    append = (sender, message, position) => {
      messageContainer.innerHTML += `<div class="message ${position}">${sender} : ${message} <span id="time">${moment().format('LT')}</span></div> <br>`
      messageContainer.scrollTo(0, messageContainer.scrollHeight);
    }
    socket.on('alluser', username => {
      document.querySelector("#online").textContent = username.length
      console.log(username)
      let clutter = ''
      username.forEach(elem => {
        clutter += `<h1><name>${elem}</name><span>Online <g>Â·</g></span></h1>`
      });
      document.querySelector(".onlineusers").innerHTML = clutter
    })


    form.addEventListener("submit", (e) => {
      e.preventDefault();
      const message = messageInp.value
      if (message.trim().length > 0) {
        append(`You`, `${message}`, 'right')
        socket.emit('send', message);
        messageInp.value = '';

      }
    })

    messageInp.addEventListener("keyup", (dets) => {
      if (dets.keyCode === 13 && messageInp.value.trim().length > 0) {
        document.querySelector(".btn").click();
      }
    })
    
    function getname() {
      var name = prompt('Enter Your Name to join')
      if(name === null){
        getname()
      } 
      var trimName = name.trim()
      if (  trimName.length < 0 || trimName == null || trimName == '' ) {
        getname()
      }
      else {
        socket.emit('newUserJoined', trimName)
        socket.on('user-joined', name => {
          append(`${name}`, `joined the chat`, 'center')
        })
      }
    }
    getname()
    socket.on('user-disconnected', name => {
      append(`${name}`, `leaved the chat`, 'center')
    })

    socket.on('receive', (data) => {
      append(`${data.name}`, `${data.message}`, 'left')
    })
  </script>
</body>

</html>